
[
		{ "keys": ["alt+enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line Before.sublime-macro"} },
		{ "keys": ["ctrl+shift+h"], "command": "pass" },
		{ "keys": ["ctrl+shift+e"], "command": "reopen_last_file" },
		{ "keys": ["ctrl+shift+t"], "command": "goto_symbol_in_project" },
		{ "keys": ["ctrl+t"], "command": "show_overlay", "args": {"overlay": "goto", "text": "@"} },
		{ "keys": ["ctrl+r"], "command": "pass" },
		{ "keys": ["ctrl+shift+r"], "command": "pass" },
		{ "keys": ["alt+backspace"], "command": "jump_back" },
		{ "keys": ["alt+space"], "command": "jump_forward" },
		{ "keys": ["ctrl+b"], "command": "goto_definition" },
		{ "keys": ["ctrl+shift+b"], "command": "goto_reference" },

		{ "keys": ["ctrl+$"], "command": "toggle_side_bar" },
		{ "keys": ["alt+$"], "command": "reveal_in_side_bar" },
		// create layout single (ctrl + ")
		{
			"keys": ["ctrl+\""],
			"command": "set_layout",
			"args":
				{
					"cols": [0.0, 1.0],
					"rows": [0.0, 1.0],
					"cells": [[0, 0, 1, 1]]
				}
		},
		// create layout double columns (ctrl + «)
		{
			"keys": ["ctrl+«"],
			"command": "set_layout",
			"args":
				{
					"cols": [0.0, 0.5, 1.0],
					"rows": [0.0, 1.0],
					"cells": [[0, 0, 1, 1], [1, 0, 2, 1]]
				}
		},
		    // go to group1 (alt + ")
		    { "keys": ["alt+\""], "command": "focus_group", "args": { "group": 0 } },
		    // go to group2 (alt + «)
		    { "keys": ["alt+«"], "command": "focus_group", "args": { "group": 1 } },
		    // go to next group (alt + tab)
		    { "keys": ["alt+tab"], "command": "focus_neighboring_group", "args": {"forward": false} },


	{ "keys": ["alt+up"], "command": "move", "args": {"by": "pages", "forward": false} },
	{ "keys": ["alt+down"], "command": "move", "args": {"by": "pages", "forward": true} },
	{ "keys": ["alt+shift+up"], "command": "move", "args": {"by": "pages", "forward": false, "extend": true} },
	{ "keys": ["alt+shift+down"], "command": "move", "args": {"by": "pages", "forward": true, "extend": true} },	

	{ "keys": ["alt+left"], "command": "move_to", "args": {"to": "bol", "extend": false} },
	{ "keys": ["alt+right"], "command": "move_to", "args": {"to": "eol", "extend": false} },
	{ "keys": ["alt+shift+left"], "command": "move_to", "args": {"to": "bol", "extend": true} },
	{ "keys": ["alt+shift+right"], "command": "move_to", "args": {"to": "eol", "extend": true} },

	{ "keys": ["ctrl+up"], "command": "swap_line_up" },
	{ "keys": ["ctrl+down"], "command": "swap_line_down" },
	{ "keys": ["ctrl+shift+up"], "command": "pass" },
	{ "keys": ["ctrl+shift+down"], "command": "pass" },

	{ "keys": ["alt+ctrl+up"], "command": "select_lines", "args": {"forward": false} },
	{ "keys": ["alt+ctrl+down"], "command": "select_lines", "args": {"forward": true} },

	{ "keys": ["ctrl+shift+a"], "command": "expand_selection", "args": {"to": "line"} },
	{ "keys": ["ctrl+l"], "command": "pass", "args": {"to": "line"} },
	{ "keys": ["ctrl+d"], "command": "pass" },
	{ "keys": ["ctrl+k", "ctrl+d"], "command": "pass" },
	{ "keys": ["ctrl+shift+space"], "command": "pass", "args": {"to": "scope"} },
	{ "keys": ["ctrl+shift+m"], "command": "pass", "args": {"to": "brackets"} },
	{ "keys": ["ctrl+m"], "command": "pass", "args": {"to": "brackets"} },
	{ "keys": ["ctrl+shift+j"], "command": "pass", "args": {"to": "indentation"} },

	{ "keys": ["ctrl+space"], "command": "auto_complete" },
	{ "keys": ["ctrl+space"], "command": "replace_completion_with_auto_complete", "context":
		[
			{ "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
			{ "key": "auto_complete_visible", "operator": "equal", "operand": false },
			{ "key": "setting.tab_completion", "operator": "equal", "operand": true }
		]
	},

	{ "keys": ["ctrl+l"], "command": "reindent", "context":
		[
			{ "key": "setting.auto_indent", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_match", "operand": "^$", "match_all": true },
			{ "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true }
		]
	},

	{ "keys": ["alt+c"], "command": "duplicate_line" },


		// Find panel key bindings
	{ "keys": ["enter"], "command": "find_next", "context":
		[{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["alt+backspace"], "command": "find_prev", "context":
		[{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["ctrl+enter"], "command": "find_all", "args": {"close_panel": true},
		 "context": [{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["shift+enter"], "command": "insert", "args": {"characters": "\n"}, "context":
		[{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]
	},

		// Replace panel key bindings
	{ "keys": ["enter"], "command": "replace_next", "context":
		[{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["shift+enter"], "command": "pass", "context":
		[{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["alt+enter"], "command": "pass", "args": {"close_panel": true},
		"context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["ctrl+enter"], "command": "replace_all", "args": {"close_panel": true},
		 "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
	},

]
